// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=ld000, b=ld001, c=ld010, d=ld011, e=ld100, f=ld101, g=ld110, h=ld111);
	Register(in=in, load=ld000, out=out000);
	Register(in=in, load=ld001, out=out001);
	Register(in=in, load=ld010, out=out010);
	Register(in=in, load=ld011, out=out011);
	Register(in=in, load=ld100, out=out100);
	Register(in=in, load=ld101, out=out101);
	Register(in=in, load=ld110, out=out110);
	Register(in=in, load=ld111, out=out111);
	Mux8Way16(a=out000, b=out001, c=out010, d=out011, e=out100, f=out101, g=out110, h=out111, sel=address, out=out);

}